* Now
  - (x) Refactor eval to return EvalValue
  - ( ) Functions. `--my-func: func(if(get-var(--x), get-var(--y), ""))`.
  - ( ) Function calls. `call(get-var(--my-func), --x: 6, --y: 2)`
  - ( ) Evaluate `calc`
  - ( ) string concatenation
  - ( ) analog + digital clock example

* Later
  - ( ) Update `--cssx-text` on update
  - ( ) `request` error handling
  - ( ) `has-class`
  - ( ) `add-class` & `remove-class` should use self if id is not specified?
  - ( ) keyboard events
  - ( ) Code cleanup
  - ( ) Additional events
  - ( ) Improve parser error messages
  - ( ) Improve eval error messages
  - ( ) filter for on update on specific properties

* Maybe
  - ( ) `list` & `tuple` data structures?
  - ( ) *server-side css*? Why the fuck not!?

* Done
  - (x) Hydrate existing elements instead of re-creating
  - (x) `load-cssx` functions
  - (x) `get-variable`
  - (x) `update-variable`
  - (x) Use css units for `delay` function
  - (x) Specify node type - `button(id)` or `button#id`
  - (x) attributes
  - (x) `--cssx-text` (and maybe `--cssx-html`?)
  - (x) dom tests
  - (x) `attr` function
  - (x) `set-attr` should allow specifying id?
  - (x) `set-attr` + remove attribute?
  - (x) `pair` parsing
  - (x) `selector` parsing
  - (x) `map` data structure
  - (x) component system (with variables. `instance(button#my-btn)`)
  - (x) More complex selector support for cssx-children
  - (x) `add-element` & `remove-element`
  - (x) conditionals
  - (x) on update
  - (x) access child from an instance (update checkbox)
  - (x) access instance from child (delete task)
  - (x) focus blur events

