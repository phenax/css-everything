:root {
  --color-gray: #cccccc;
  --color-accent: #5180e9;

  font-size: 16px;
  font-family: sans-serif;
  color: #555;

  --cssx-children: main#container;
}

body * { box-sizing: border-box; }

#container {
  max-width: 600px;
  margin: 2rem auto;
  border: 1px solid var(--color-gray);
  border-radius: 5px;
  overflow: hidden;

  --some-str: "Hello";

  --cssx-on-mount: js-eval(string("alert('", quotify(get-var(--some-str)), "')"));

  /* --my-func: */
  /*   js-eval(get-var(--js)) */
  /*   delay(1s) */
  /*   call(--my-func, map(--js: get-var(--js))) */
  /* ; */
  /**/
  /* --cssx-on-mount: call(--my-func, map(--js: "console.log(`yay`)")); */

  --cssx-children: form#task-input-form #task-list;
}

#task-input-form {
  display: flex;
  width: 100%;

  /* prettier-ignore */
  --cssx-on-submit:
    prevent-default()
    add-children(
      task-list,
      instance(div#task-item, map(--text: attr(text-input, 'value')))
    )
    set-attr(text-input, value, '')
  ;

  /* prettier-ignore */
  --cssx-on-mount:
    add-children(
      task-list,
      instance(div#task-item, map(--text: "Buy lemons"))
    )
    add-children(
      task-list,
      instance(div#task-item, map(--text: "Make lemonaide"))
    )
    add-children(
      task-list,
      instance(div#task-item, map(--text: "Kill all the non-believers"))
    )
  ;

  /* prettier-ignore */
  --cssx-children:
    input#text-input[placeholder="Eg: Buy Milk"]
    button#create-task-btn[type=submit]
  ;
}

#text-input {
  display: block;
  width: 100%;
  padding: 0.7rem 1rem;
  font-size: 1rem;
  border: none;
  border-bottom: 1px solid var(--color-gray);
}

#create-task-btn {
  padding: 0 2rem;
  background-color: var(--color-accent);
  color: white;
  font-weight: bold;
  border: none;
  font-size: 1.2rem;

  --cssx-text: '+';
}

[data-instance=task-item] {
  --text: "default text";
  --done: "false";
  --is-editing: "false";

  padding: 1rem;
  display: flex;
  width: 100%;
  align-items: center;

  --cssx-on-mount: update(--task-item-id, attr(data-element));

  --cssx-on-update:
    update(
      ':scope [data-element=edit-task-form]',
      display,
      if(get-var(--is-editing), 'block', 'none')
    )
    update(
      ':scope [data-element=task-text]',
      display,
      if(get-var(--is-editing), 'none', 'block')
    )
    if(get-var(--is-editing),
      call-method(':scope [data-element=edit-task-input]', focus),
      "")
  ;

  --cssx-children:
    div#checkbox
    div#task-text
    form#edit-task-form
    button#delete-task
  ;
}

[data-instance=task-item]:not(:first-child) {
  content: "";
  border-top: 1px solid var(--color-gray);
}

[data-element=task-text] {
  padding: .2rem .8rem;
  flex: 2;

  --cssx-on-click: update(get-var(--task-item-id), --is-editing, "true");
}
[data-element=task-text]::after {
  content: var(--text);
}

[data-element=edit-task-form] {
  display: none;
  width: 100%;
  padding: 0 .5rem;

  --cssx-children: input#edit-task-input;
  --cssx-on-submit:
    prevent-default()
    update(
      get-var(--task-item-id),
      --text,
      attr(':scope [data-element=edit-task-input]', value)
    )
    update(get-var(--task-item-id), --is-editing, "false")
  ;
}
[data-element=edit-task-input] {
  display: block;
  width: 100%;
  border: none;
  border-bottom: 1px solid gray;
  font-size: 1rem;
  padding: .2rem .3rem;

  --cssx-on-focus: set-attr(value, get-var(--text));
  --cssx-on-blur: update(get-var(--task-item-id), --is-editing, "false");
}
[data-element=edit-task-input]:focus {
  outline: 1px solid #aaa;
}

[data-element=checkbox] {
  --checked: false;

  width: 18px;
  height: 18px;
  border: 2px solid gray;
  background-color: transparent;
  cursor: pointer;

  --cssx-on-click: update(--checked, if(get-var(--checked), false, true));

  --cssx-on-update:
    update(get-var(--task-item-id), --done, get-var(--checked))
    update(background-color, if(get-var(--checked), get-var(--color-accent), transparent))
  ;
}

[data-element=delete-task] {
  --cssx-text: 'Delete';
  --cssx-on-click: remove-element(get-var(--task-item-id));
}
